package z_exam;

public class Exam_03_sem {
	public static void main(String[] args) {
		
		//[4-7]
		//풀이방법1 - 정석: 문제에 맞춰서 muk따라 byen 조건 달라지는 거
		/*
		 muk -> 숫자
		1 	-> 1				인덱스값 = 끝나는 숫자
		2 	-> 1.2 			앞줄의 인덱스 값이 끝나는 걸 결정해준다
		3 	-> 1.2.3			공통점 모두1부터 시작
		4 	-> 1.2.3.4
		...
		10 	-> 1.2.3.4...10
		*/
		
		//디버깅 해보기
		int sum=0;
		for (int muk = 1; muk < 11; muk++){ 	//a: 묶음
			for(int byen = 1; byen < muk+1; byen++){
				sum += byen;
			}
		}
		
		//풀이방법2 - 1.묶음별 합계(mukSum)를 구한 후 2. 토탈합계(toSum)에 다시 넣는것
		/*
		int toSum = 0;
		int mukSum =0;
		
		1번묶음더할때)		mukSum에 담긴 수
		muksum += 1 -> mukSum = 1
		toSum += mukSum;
		
		2번묶음더할때
		muksum += 2 -> muksum = 1 + 2 
		toSum += mukSum;
		...
		10번묶음더할때)
		muksum += 10 -> mukSum = 1 + 2 + 3 + ... + 10
		toSum += mukSum;
		*/
		
		//풀이방법3
		//					a*(11-a)
		//1 				1*10
		//1 2				2*9
		//1 2 3				3*8
		//1 2 3 4 ... 10	10*1
		
		//[4-8]
		//1. 끝나는걸 모르기때문에 while 무제한돌려놓고 break 써서나가야돼
		
		//풀이방법1: 무조건더하기
		//부호를 관리하는 변수를 지정 buho = 1; 
		//sum=a*buho
		//a++;
		
		//buho *=-1;
		
		
		//풀이방법2: 더했다가 뺐다가 - 조금더쉬움
		//홀수면 더하고 짝수면 빼다가
		//합계가 100이 넘어가는 순간 break하고 나가면 199
		
		
		//[4-9]
		
		//53263 = a
		//sum = 0
		//1의자리꺼내기 b=a%10
		//sum +=b;
		//a /= 10; (a = a/10)	//헐 이렇게 오페리이션 연산자쓰면 간단스
	
		//while문 사용
		
		
		//[4-10] 피보나치
		/*
		1 + 1 = 2
		a + b = c
		
			a + b = c
				
				합치고
				
				a + b = c
				
					합치고		sum은 c의 합계?
								10까지하는거니까 a+b빼고 c를 8번 더하는거,
								8번한다는걸 알고있으니까 for문 사용
		*/
		
		//[4-11] 숫자인거 판단
		//str="12o34" 은 char[]의 배열  [0]에는 '1', [1]에는 '2', [2]에는 'o'
		//ch = str.charAt(0) -> '1'
		//이거 꺼내서 숫자인지 확인하고
		//그다음 인덱스 charAt()에 넣어서 숫자인지확인하다가
		//문자가 나오면 break로 나가야한다.
		
		//반복범위 : n<str.length() --> 관련문제 앞에 있을거야 찾아보쇼
		
		  
		//[펠린드롬] 12321 -> 우리는 자릿수를 모르기때문에 1을 맨앞으로 보내고 이런거 안됨 .. .....
		/*
		a=12321
		tmp = a;
		int re = 0; 는 뒤에서 부터 읽은거를 저장할것
		re += a%10 
		
		tmp /= 10;  // 1232
		
		re*=10;	아까있던 1*10
		re+=a%10;10+2
		tmp/=10;// 123
		
		tmp 0되면 종료
		a=re가 같으면 펠린드롬 형태
		
		
		
		
		
		*/
	}	
}
